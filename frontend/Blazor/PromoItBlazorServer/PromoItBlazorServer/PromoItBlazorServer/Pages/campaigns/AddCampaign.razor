@page "/add-campaign"
@attribute [Authorize]
@using System.Net.Http;
@using System.Net.Http.Json;
@using PromoItBlazorServer.Data;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h1>Add new campaign to make the world better!</h1>

<form method="post" @onsubmit="@SubmitForm">
    <div class="form-group">
        <label for="campaign">Name of campaign</label>
        <input type="text" class="form-control" id="campaign" @bind="@campaign.CampaignName" required />
    </div>
    <div class="form-group">
        <label for="hashtag">Hashtag</label>
        <input type="hashtag" class="form-control" id="hashtag" @bind="@campaign.Hashtag" required />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <input type="description" class="form-control" id="description" @bind="@campaign.Description" required />
    </div>
    <div class="form-group">
        <label for="userid">User id</label>
        <input type="userid" class="form-control" id="userid" @bind="@campaign.UserId" />
    </div>
    <div class="form-group">
        <label for="date">Create date</label>
        <input type="date" class="form-control" id="date" @bind="@campaign.CreateDate" />
    </div>
    <div class="form-group">
        <label for="company">Campany</label>
        <input type="company" class="form-control" id="company" @bind="@campaign.CompanyId" />
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</form>

@if (ErrorMessage != null)
{
            <div class="alert alert-danger">@ErrorMessage</div>
}

@code {
    private string ErrorMessage { get; set; }

    CampaignDto campaign = new CampaignDto();

    private async Task SubmitForm()
    {
        try
        {

            HttpClient client = new HttpClient();

            HttpResponseMessage response = await client.PostAsJsonAsync("http://localhost:15039/api/Campaigns", campaign);
            if (response.IsSuccessStatusCode)
            {
                response.EnsureSuccessStatusCode();

                NavigationManager.NavigateTo("/campaigns");
            }
            else
            {
                object error = await response.Content.ReadAsStringAsync();
                Console.WriteLine(error);
                await JSRuntime.InvokeAsync<object>("alert", error);
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}
