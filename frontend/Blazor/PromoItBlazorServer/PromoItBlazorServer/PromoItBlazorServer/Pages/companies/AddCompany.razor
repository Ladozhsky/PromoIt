@page "/add-company"
@attribute [Authorize]
@using System.Net.Http;
@using System.Net.Http.Json;
@using PromoItBlazorServer.Data;
@using System.Net.Http.Headers;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IHttpContextAccessor HttpContextAccessor


<form method="post" @onsubmit="@SubmitCompanyForm">

    <div class="form-group">
        <label for="companyname">Company name</label>
        <input type="text" class="form-control" id="companyname" @bind="@company.CompanyName" required />
    </div>
    <div class="form-group">
        <label for="site">Website</label>
    <input type="text" class="form-control" id="site" @bind="@company.Site" required />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
    <input type="text" class="form-control" id="email" @bind="@company.Email" required />
    </div>
    <div>
    <label for="companytype">Choose your company type</label>
    <select id="companytype" class="form-select form-select-lg mb-3" @bind="@company.CompanyType">
            @foreach (var companyType in companyTypes)
            {
                 <option value="@companyType">@companyType</option>
            }
    </select>
    </div>
    <button type="submit" class="btn btn-primary" @onclick="NavigateToRegister">Create company</button>
    </form>

@code {
    private List<string> companyTypes = new List<string> { "Business", "NPO" };

    private string ErrorMessage { get; set; }

    public void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register", true);
    }

    CompanyDto company = new CompanyDto();

    private List<CompanyDto> companies = new List<CompanyDto>();

    HttpClient http = new HttpClient();

    private async Task SubmitCompanyForm()
    {
        try
        {
            string token = HttpContextAccessor.HttpContext.Request.Cookies["auth_token"];

            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            HttpResponseMessage response = await http.PostAsJsonAsync("https://localhost:7096/api/Companies", company);
            if (response.IsSuccessStatusCode)
            {
                response.EnsureSuccessStatusCode();
            }
            else
            {
                object error = await response.Content.ReadAsStringAsync();
                Console.WriteLine(error);
                await JSRuntime.InvokeAsync<object>("alert", error);
            }

        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}
