@page "/my-balance"
@attribute [Authorize]
@using PromoItBlazorServer.Data
@using System.Net.Http
@using System.Net.Http.Json
@using System.Collections.Generic
@using System.Net.Http.Headers;
@using Tweetinvi;
@using Tweetinvi.Models;
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JSRuntime
@inject ILogger<UsersBalance> Logger

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<PageTitle>My balance</PageTitle>

<h1>My balance</h1>

<div>
    @foreach (var dollar in dollars)
    {
            <div class="card-balance text-center">
                <span><h3>@dollar.CampaignName</h3></span>
                    <span><h3>@dollar.Dollars $</h3></span>
            </div>
    }
</div>

@code {
    private string ErrorMessage { get; set; }

    public List<DollarsByUser> dollars = new List<DollarsByUser>();
    private RequestsUrls requestsUrls = new RequestsUrls();

    HttpClient http = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            string token = HttpContextAccessor.HttpContext.Request.Cookies["auth_token"];

            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            Logger.LogInformation("Getting user's balance...");
            dollars = await http.GetFromJsonAsync<List<DollarsByUser>>(requestsUrls.Dollars);
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = ex.Message;
            Logger.LogError(ErrorMessage);
        }
    }
}


